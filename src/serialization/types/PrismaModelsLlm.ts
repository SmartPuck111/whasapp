/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as SuperAgent from "../../api";
import * as core from "../../core";

export const PrismaModelsLlm: core.serialization.ObjectSchema<
    serializers.PrismaModelsLlm.Raw,
    SuperAgent.PrismaModelsLlm
> = core.serialization.object({
    id: core.serialization.string(),
    provider: core.serialization.lazy(async () => (await import("..")).LlmProvider),
    apiKey: core.serialization.string(),
    options: core.serialization.string().optional(),
    agents: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("..")).PrismaModelsAgentLlm))
        .optional(),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
    apiUserId: core.serialization.string(),
    apiUser: core.serialization.lazyObject(async () => (await import("..")).PrismaModelsApiUser).optional(),
});

export declare namespace PrismaModelsLlm {
    interface Raw {
        id: string;
        provider: serializers.LlmProvider.Raw;
        apiKey: string;
        options?: string | null;
        agents?: serializers.PrismaModelsAgentLlm.Raw[] | null;
        createdAt: string;
        updatedAt: string;
        apiUserId: string;
        apiUser?: serializers.PrismaModelsApiUser.Raw | null;
    }
}
