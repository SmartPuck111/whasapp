/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as SuperAgent from "../../api";
import * as core from "../../core";

export const PrismaModelsWorkflowStep: core.serialization.ObjectSchema<
    serializers.PrismaModelsWorkflowStep.Raw,
    SuperAgent.PrismaModelsWorkflowStep
> = core.serialization.object({
    id: core.serialization.string(),
    order: core.serialization.number(),
    workflowId: core.serialization.string(),
    workflow: core.serialization.lazyObject(async () => (await import("..")).PrismaModelsWorkflow).optional(),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
    input: core.serialization.string(),
    output: core.serialization.string(),
    agentId: core.serialization.string(),
    agent: core.serialization.lazyObject(async () => (await import("..")).PrismaModelsAgent).optional(),
});

export declare namespace PrismaModelsWorkflowStep {
    interface Raw {
        id: string;
        order: number;
        workflowId: string;
        workflow?: serializers.PrismaModelsWorkflow.Raw | null;
        createdAt: string;
        updatedAt: string;
        input: string;
        output: string;
        agentId: string;
        agent?: serializers.PrismaModelsAgent.Raw | null;
    }
}
